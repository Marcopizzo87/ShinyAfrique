install.packages("randomForest")
install.packages("ggplot2")
# Clean the environment if you need to do so
rm(list = ls())
install.packages("shiny")
?library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
# Set WD automatically to where the R scrip is
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Check the wd
getwd()
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
#install.packages("shiny")
install.packages("leaflet")
library(leaflet) # load leaflet library
library(tidyverse)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
runApp()
runApp()
r
df = read.csv("./NYPD_7_Major_Felony_Incidents.csv", stringsAsFactors = F)
df = read.csv(".data/NYPD_7_Major_Felony_Incidents.csv", stringsAsFactors = F)
# Set WD automatically to where the R scrip is
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
df = read.csv(".data/NYPD_7_Major_Felony_Incidents.csv", stringsAsFactors = F)
df = read.csv("./data/NYPD_7_Major_Felony_Incidents.csv", stringsAsFactors = F)
View(df)
# Separate the "Location.1" column in 2 called latitude and longitude
df <- tidyr::separate(data=df,
col=Location.1,
into=c("Latitude", "Longitude"),
sep=",",
remove=FALSE)
help(::)
help("::")
df$Latitude <- stringr::str_replace_all(df$Latitude, "[(]", "")
df$Longitude <- str_replace_all(df$Longitude, "[)]", "")
df$Latitude <- as.numeric(df$Latitude)
df$Longitude <- as.numeric(df$Longitude)
sample_data <- df[c(1:1000),] # !! CHANGE
saveRDS(sample_data, "./sample_data.rds")
saveRDS(sample_data, "./data/sample_data.rds")
rm(list = ls())
runApp()
runApp()
runApp()
rm(list = ls())
# Set WD automatically to where the R scrip is
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
df = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
View(df)
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "Point (", "")
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[Point (]", "")
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[)]", "")
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("Latitude", "Longitude"),
sep=",",
remove=FALSE)
df = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[Point (]", "")
df = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("delete","Latitude", "Longitude"),
sep=" ",
remove=FALSE)
df
df$Latitude <- stringr::str_replace_all(df$Latitude, "[(]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[)]", "")
df$Latitude <- stringr::str_replace_all(df$Latitude, c("[(]","[ ]"), "")
df$Latitude <- stringr::str_replace_all(df$Latitude, c("[(]","[ ]"), "")
df$Longitude <- stringr::str_replace_all(df$Longitude, c("[(]","[ ]"), "")
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("Latitude", "Longitude"),
sep=" ",
remove=FALSE)
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("delete","Latitude", "Longitude"),
sep=" ",
remove=FALSE)
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[( ]", "")
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[) ]", "")
df$Latitude <- stringr::str_replace_all(df$Latitude, c("[(]","[ ]"), "")
df$Longitude <- stringr::str_replace_all(df$Longitude, c("[(]","[ ]"), "")
df$Latitude <- as.numeric(df$Latitude)
df$Longitude <- as.numeric(df$Longitude)
df = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("delete","Latitude", "Longitude"),
sep=" ",
remove=FALSE)
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[( ]", "")
df$wkt_geom <- stringr::str_replace_all(df$wkt_geom, "[) ]", "")
df$Latitude <- stringr::str_replace_all(df$Latitude, c("[(]","[ ]"), "")
df$Longitude <- stringr::str_replace_all(df$Longitude, c("[(]","[ ]"), "")
df$Latitude <- stringr::str_replace_all(df$Latitude, c("[(]","[ ]"), "")
df$Longitude <- stringr::str_replace_all(df$Longitude, c("[(]","[ ]"), "")
df$Latitude <- stringr::str_replace_all(df$Latitude, "[(]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[(]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[)]", "")
df$Latitude <- as.numeric(df$Latitude)
df$Longitude <- as.numeric(df$Longitude)
sample_data <-  df ## in case you want to subset your dataset df[c(1:1000),]
saveRDS(sample_data, "./data/sample_data.rds")
runApp()
df = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("delete", "Longitude","Latitude"),
sep=" ",
remove=FALSE)
df$Latitude <- stringr::str_replace_all(df$Latitude, "[(]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[)]", "")
df$Latitude <- as.numeric(df$Latitude)
df$Longitude <- as.numeric(df$Longitude)
df = read.csv("./data/mfr_village_post13_all.csv", stringsAsFactors = F)
df <- tidyr::separate(data=df,
col=wkt_geom,
into=c("delete", "Longitude","Latitude"),
sep=" ",
remove=FALSE)
View(df)
df$Latitude <- stringr::str_replace_all(df$Latitude, "[(]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[)]", "")
df$Latitude <- stringr::str_replace_all(df$Latitude, "[)]", "")
df$Longitude <- stringr::str_replace_all(df$Longitude, "[()]", "")
df$Latitude <- as.numeric(df$Latitude)
df$Longitude <- as.numeric(df$Longitude)
sample_data <-  df ## in case you want to subset your dataset df[c(1:1000),]
saveRDS(sample_data, "./data/sample_data.rds")
runApp()
View(df)
runApp()
runApp()
runApp()
runApp()
